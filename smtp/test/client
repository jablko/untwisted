#!/usr/bin/env python

import untwisted
from testify import *
from untwisted import event, smtp

@test
@event.continuate
def data():
  expect(2)

  class transport:
    class protocol:
      dataReceived = event.sequence()

    write = event.sequence()

  client = type.__call__(smtp.client, transport)
  sample = type.__call__(client.mail)
  sample.dataCmd('Expect')

  equal((yield transport.write.shift()), 'DATA\r\n')

  transport.protocol.dataReceived('354\r\n')

  equal((yield transport.write.shift()), 'Expect\r\n.\r\n')

@test
@event.continuate
def dataCrlf():
  expect(2)

  class transport:
    class protocol:
      dataReceived = event.sequence()

    write = event.sequence()

  client = type.__call__(smtp.client, transport)
  sample = type.__call__(client.mail)
  sample.dataCmd('Expect\r\n')

  equal((yield transport.write.shift()), 'DATA\r\n')

  transport.protocol.dataReceived('354\r\n')

  equal((yield transport.write.shift()), 'Expect\r\n.\r\n')

@test
@event.continuate
def reply():
  expect(1)

  class transport:
    class protocol:
      dataReceived = event.sequence()

    write = event.sequence()

  client = type.__call__(smtp.client, transport)
  client.reply(untwisted.wildcard)
  transport.protocol.dataReceived('456 Ignore\r\n234 Expect\r\n')

  equal(str((yield client.reply())), '234 Expect\r\n')

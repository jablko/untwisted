#!/usr/bin/env python

import exceptions, untwisted
from testify import *
from untwisted import event

class Exception(exceptions.Exception):
  pass

@test
@event.continuate
def continuate():
  expect(1)

  equal((yield event.event()('Expect')), 'Expect')

@test
def propagateException():
  expect(1)

  @untwisted.call
  @event.continuate
  def sample():
    raise Exception('Raise')

    yield

  @sample.connect
  @untwisted.callback
  def ignore():
    try:
      ok(False, (yield))

    except Exception:
      ok(True)

@test
def propagateStopIteration():
  expect(2)

  @untwisted.call
  @event.continuate
  def sample():
    raise event.StopIteration('First', 'Second', 'Third', True=True, False=False)

    yield

  sample.connect(lambda *args, **kwds: (equal(args, ('First', 'Second', 'Third')), equal(kwds, { 'True': True, 'False': False })))
